Symbols are geometry with meaning. The symbol is perhaps the most general idea that exists in human thought, since everything we do is mediated through the use of some type of symbol. When we speak of symbols in Geometron we mean any geometric construction which has meaning to people. This includes not written language like text but constructions like the layout of a microchip or the design of a building. It also includes the way we control machines, how we program them build automation. Geometron represents a new framework for working with all these kinds of symbols.

We live in a civilization today totally dominated by numbers and by the people who work with numbers. The machines we currently use to communicate are built by people who believe that the most fundamental task such machines can do is to work with numbers. They call all these machines “computers” and have a whole theoretical framework for understanding how to build them using the ideas of arithmetic. This works. But it is extremely inefficient and distracts from the real purpose of such machines. Do these machines do arithmetic? Of course. They also keep very accurate time, does that make them clocks? They produce heat, does that make them heaters? No. Just as we don’t call a light bulb a “screw” just because it screws into a socket, it does not make sense to let the idea of the arithmetic engine dominate in a technology the sole purpose of which is to communicate with other people using symbols. At some intuitive level, most people understand this, it is why the smart phone is primarily called a “phone” rather than a “computer”. But the underlying mathematical constructs which built the digital computer remain, along with a whole lot of mathematical flotsam and jetsam which have held back progress and made simple and free media out of reach.

In Geometron we are switching from a world view based on numbers to one based on geometry. This represents a shift in value system. In “computer science”, the manipulation of numbers and logic are considered the most fundamental operations. In Geometron, we consider geometric constructions to be the most fundamental. This is a shift in perspective, which we can apply to the whole of the existing machines. How are these machines built? The microchips which make them work are nothing but huge geometric constructions, made up of little overlapping rectangles and polygons. These chips are then laid out on circuit boards which are again geometric constructions. The chips are placed automatically on the boards using machines programmed to carry out a sequence of geometric motions. They are packaged in cases made in molds again machined with this kind of geometric programming. And finally when assembled, their main task is displaying symbols on the screen which is again just geometric construction.

It is easy to forget given the onslaught of propaganda from Silicon Valley just how accidental the rise of their machines as the dominant technology was. We also are encouraged to forget that these machines were built primarily for war initially, then large authoritarian organizations to track and control people, and only later, almost as an afterthought, as the communication devices we rely on for all aspects of modern life. One of the theses of Geometron is that a shift in thinking from one based on numbers to one based on geometry is a shift away from the ideology of dominating large amounts of land and people toward one of cooperation based on sharing of technology and ideas.

When we build everything from trash found directly in our environment, empire-building doesn’t really accomplish anything. The people 1000 miles away from you have the same piles of broken phones you do, so you gain nothing by dominating them and vice versa. But if you can share with them how to make those phones part of your free network, the value of your network infrastructure goes up exponentially, just as we find in all networks. as they scale up.

In computer science, they work with an idea called a Turing Machine, named after computer pioneer Alan Turing, which is a generalized machine for doing arithmetic. An infinite tape of ones and zeros is fed into this imaginary machine, and the contents of that tape give instructions to the machine, which then carries out actions on the ones and zeros on the tape. Any computer, regardless of the details of how it is built, can be shown to be equivalent to this toy model. In Geometron, we are creating a similar object: an abstraction which can construct any symbol, which takes symbols as an input.

The basis of geometric programming in Geometron is the Geometron Virtual Machine, or GVM. Just like the Turing Machine, this is an abstract construct which carries out geometric constructions based on a set of instructions. We assume that there is a main program, which we call a “glyph”, which consists of a sequence of symbols, each of which represents a geometric action. Just as the Turing machine reduces every math problem to binary arithmetic, our machine reduces all geometry to discrete geometry. The GVM has an internal geometric state which represents its progress in doing geometric actions. If we are programming a physical machine like a pen on a plotter, the position of the pen is stored this way. This logic is very similar to that of languages like Logo, a teaching language developed in the 1970s, which uses what is called “turtle logic”, where patterns are drawn by a virtual turtle which moves around on a screen, and which can also be performed by a physical robot with a pen. However what we are doing differs radically from Logo as we will see below.

We also have states of this virtual machine which describe what motions it can carry out. The most basic of these is the step size. By creating geometric programs using an abstract step size without actual numbers, we can create programs to draw symbols independent of what machine we use and what scale we are at, copying verbatim a program from a giant wall climbing robot which spray paints symbols on a building to a nanolithography system which prints the exact same symbol in an area smaller than a human hair, without ever dealing with the mechanism of either machine. This unit state is also used to define how we do constructions like “draw a circle”.

The most basic geometric program we can carry out is the construction of the Vesica Piscis. This figure, from the Latin “fish bladder”, is just two circles each of which has its center along the edge of the other. In the dialect of Geometron presented here, the symbols are all printed inside squares of identical size, patterned from left to right. The symbol describing the action of drawing a circle is a square with a circle in it, and that draws a circle with radius equal to the current value of the step size. If we draw a circle of radius equal to step size, then move sideways one unit of that same step size and repeat the action, we get the Vesica Piscis. The symbol to move to the side is just an arrow pointing to he side. These symbols are themselves constructed using more of the actions of Geometron: drawing line segments, rotating by discrete angles, scaling the unit down and back up and so on.